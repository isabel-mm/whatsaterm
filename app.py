import streamlit as st
import pandas as pd
from streamlit_js_eval import streamlit_js_eval

# ---- Configuraci√≥n inicial ----
st.title("Selecci√≥n de t√©rminos en ling√º√≠stica de corpus")
st.write("Selecciona t√©rminos con el rat√≥n y haz clic en 'Marcar t√©rmino' para guardarlos.")

# ---- Entrada del nombre del usuario ----
user_name = st.text_input("Nombre:")

# ---- Texto de ejemplo ----
texto = """La ling√º√≠stica de corpus es una metodolog√≠a que emplea corpus electr√≥nicos para analizar fen√≥menos ling√º√≠sticos con base en datos reales. Se distingue por el uso de herramientas computacionales para identificar patrones y frecuencias l√©xicas."""

# ---- Estado de sesi√≥n para almacenar t√©rminos seleccionados ----
if "selected_terms" not in st.session_state:
    st.session_state.selected_terms = []

if "current_selection" not in st.session_state:
    st.session_state.current_selection = ""

# ---- Mostrar el texto en pantalla ----
st.write("### Texto:")
st.markdown(
    f"""
    <div id='text-block' style='border:1px solid gray; padding:10px; cursor:text;'>
        {texto}
    </div>
    """,
    unsafe_allow_html=True,
)

# ---- Capturar la selecci√≥n autom√°ticamente con streamlit_js_eval ----
selected_text = streamlit_js_eval(js_expressions="window.getSelection().toString()", key="text_selection")

# ---- Mostrar el t√©rmino seleccionado ----
if selected_text:
    st.session_state.current_selection = selected_text  # Guardar selecci√≥n en session_state

st.write(f"**Texto seleccionado:** {st.session_state.current_selection if st.session_state.current_selection else '(Selecciona un t√©rmino)'}")

# ---- Bot√≥n para marcar el t√©rmino seleccionado ----
if st.button("Marcar t√©rmino"):
    if st.session_state.current_selection and st.session_state.current_selection not in st.session_state.selected_terms:
        st.session_state.selected_terms.append(st.session_state.current_selection)
        st.session_state.current_selection = ""  # Resetear selecci√≥n

# ---- Mostrar t√©rminos seleccionados ----
st.write("### T√©rminos seleccionados:")
if st.session_state.selected_terms:
    for term in st.session_state.selected_terms:
        st.write(f"- {term}")
else:
    st.warning("No hay t√©rminos seleccionados.")

# ---- Notas del usuario ----
user_notes = st.text_area("Notas u observaciones:")

# ---- Exportar t√©rminos a CSV ----
if st.button("Guardar y exportar"):
    if not st.session_state.selected_terms:
        st.error("‚ö† No hay t√©rminos seleccionados.")
    else:
        data = {
            "T√©rmino": st.session_state.selected_terms,
            "Usuario": [user_name] * len(st.session_state.selected_terms),
            "Observaciones": [user_notes] * len(st.session_state.selected_terms),
        }
        df = pd.DataFrame(data)
        csv = df.to_csv(index=False).encode("utf-8")

        st.download_button(
            label="üì• Descargar t√©rminos seleccionados",
            data=csv,
            file_name="terminos_seleccionados.csv",
            mime="text/csv",
        )

st.write("Cuando termines, env√≠ame el archivo a isabel.moyano@uca.es. ¬°Gracias! üòä")
