import streamlit as st
import pandas as pd

# ---- Manejo del estado de la pantalla ----
if "app_stage" not in st.session_state:
    st.session_state.app_stage = "inicio"

if "selected_terms" not in st.session_state:
    st.session_state.selected_terms = {}

if "user_name" not in st.session_state:
    st.session_state.user_name = ""

# ---- Texto de ejemplo segmentado ----
texto = [
    "La ling√º√≠stica de corpus es una metodolog√≠a que emplea corpus electr√≥nicos para analizar fen√≥menos ling√º√≠sticos con base en datos reales.",
    "Se distingue por el uso de herramientas computacionales para identificar patrones y frecuencias l√©xicas.",
    "Los corpus permiten realizar estudios emp√≠ricos en ling√º√≠stica aplicada, traducci√≥n, lexicograf√≠a y otros campos.",
    "A trav√©s del an√°lisis de corpus se pueden identificar tendencias en el lenguaje, neologismos y usos espec√≠ficos en diferentes registros."
]

# ---- Pantalla 1: Introducci√≥n ----
if st.session_state.app_stage == "inicio":
    st.title("Bienvenida al experimento")
    st.write(
        """
        En este experimento, queremos estudiar la selecci√≥n de t√©rminos en textos de ling√º√≠stica de corpus.
        
        **Instrucciones**:
        1. Introduce tu nombre en la siguiente pantalla.
        2. Lee cada p√°rrafo del texto.
        3. Escribe en la caja de la derecha los t√©rminos clave que identifiques.
        4. Cuando termines, guarda tus resultados y env√≠alos.

        ¬°Haz clic en "Siguiente" para continuar!
        """
    )

    if st.button("Siguiente"):
        st.session_state.app_stage = "nombre"
        st.rerun()

# ---- Pantalla 2: Introducir Nombre ----
elif st.session_state.app_stage == "nombre":
    st.title("Introduce tu nombre")
    st.session_state.user_name = st.text_input("Nombre:")

    col1, col2 = st.columns([1, 1])
    with col1:
        if st.button("‚¨Ö Volver"):
            st.session_state.app_stage = "inicio"
            st.rerun()

    with col2:
        if st.session_state.user_name and st.button("Siguiente ‚û°"):
            st.session_state.app_stage = "seleccion"
            st.rerun()

# ---- Pantalla 3: Selecci√≥n de t√©rminos por p√°rrafo ----
elif st.session_state.app_stage == "seleccion":
    st.title("Selecci√≥n de t√©rminos")
    st.write("Lee cada p√°rrafo y escribe los t√©rminos clave en la caja de texto correspondiente.")

    for i, parrafo in enumerate(texto):
        st.markdown(f"### P√°rrafo {i+1}")
        st.write(parrafo)
        
        key = f"terms_paragraph_{i}"
        if key not in st.session_state:
            st.session_state[key] = ""
        
        st.text_area("Escribe los t√©rminos clave:", key=key)

    col1, col2 = st.columns([1, 1])
    with col1:
        if st.button("‚¨Ö Volver"):
            st.session_state.app_stage = "nombre"
            st.rerun()

    with col2:
        if st.button("Finalizar tarea ‚û°"):
            st.session_state.app_stage = "guardar"
            st.rerun()

# ---- Pantalla 4: Guardar tarea y despedida ----
elif st.session_state.app_stage == "guardar":
    st.title("Finalizaci√≥n del experimento")
    st.write(
        f"""
        ¬°Gracias por participar, {st.session_state.user_name}! üòä  
        
        Tus t√©rminos seleccionados est√°n listos para ser guardados.  

        **Paso final**: Descarga el archivo y env√≠amelo a **isabel.moyano@uca.es**.
        """
    )

    # Guardar t√©rminos ingresados
    for i in range(len(texto)):
        key = f"terms_paragraph_{i}"
        if key in st.session_state and st.session_state[key]:
            st.session_state.selected_terms[f"P√°rrafo {i+1}"] = st.session_state[key]

    # ---- Exportar t√©rminos a CSV ----
    if st.button("Descargar t√©rminos seleccionados"):
        if not st.session_state.selected_terms:
            st.error("‚ö† No hay t√©rminos seleccionados.")
        else:
            data = {
                "P√°rrafo": list(st.session_state.selected_terms.keys()),
                "T√©rminos": list(st.session_state.selected_terms.values()),
                "Usuario": [st.session_state.user_name] * len(st.session_state.selected_terms),
            }
            df = pd.DataFrame(data)
            csv = df.to_csv(index=False).encode("utf-8")

            st.download_button(
                label="üì• Descargar t√©rminos seleccionados",
                data=csv,
                file_name="terminos_seleccionados.csv",
                mime="text/csv",
            )

    st.write("Cuando termines, env√≠ame el archivo a isabel.moyano@uca.es. ¬°Gracias por participar! üòä")

    col1, col2 = st.columns([1, 1])
    with col1:
        if st.button("‚¨Ö Volver"):
            st.session_state.app_stage = "seleccion"
            st.rerun()
    
    with col2:
        if st.button("üîÑ Reiniciar experimento"):
            st.session_state.app_stage = "inicio"
            st.session_state.selected_terms = {}
            st.session_state.user_name = ""
            st.rerun()
