import streamlit as st
import pandas as pd
import streamlit.components.v1 as components

# ---- Configuraci√≥n inicial ----
st.title("Selecci√≥n de t√©rminos en ling√º√≠stica de corpus")
st.write("Selecciona t√©rminos directamente en el texto para marcarlos.")

# Entrada del nombre del usuario
user_name = st.text_input("Nombre:")

# ---- Definir el texto a analizar ----
texto = """La ling√º√≠stica de corpus es una metodolog√≠a que emplea corpus electr√≥nicos para analizar fen√≥menos ling√º√≠sticos con base en datos reales. Se distingue por el uso de herramientas computacionales para identificar patrones y frecuencias l√©xicas."""

# ---- Estado de sesi√≥n para almacenar t√©rminos seleccionados ----
if "selected_terms" not in st.session_state:
    st.session_state.selected_terms = []

# ---- JavaScript para capturar autom√°ticamente la selecci√≥n de texto ----
custom_js = """
<script>
    document.addEventListener("mouseup", function() {
        var selectedText = window.getSelection().toString().trim();
        if (selectedText.length > 0) {
            var streamlitInput = window.parent.document.querySelector('input[data-testid="stTextInput"]');
            if (streamlitInput) {
                streamlitInput.value = selectedText;
                streamlitInput.dispatchEvent(new Event('input', { bubbles: true }));
            }
        }
    });
</script>
"""

components.html(custom_js, height=0)

# ---- Campo oculto donde se recibe la selecci√≥n ----
selected_text = st.text_input("Texto seleccionado autom√°ticamente:", key="selected_text")

# ---- Guardar la selecci√≥n sin hacer clic en ning√∫n bot√≥n ----
if selected_text and selected_text not in st.session_state.selected_terms:
    st.session_state.selected_terms.append(selected_text)
    st.experimental_rerun()  # Recargar la p√°gina para reflejar los cambios inmediatamente

# ---- Mostrar t√©rminos seleccionados ----
st.write("### T√©rminos seleccionados:")
if st.session_state.selected_terms:
    for term in st.session_state.selected_terms:
        st.write(f"- {term}")

# ---- Notas del usuario ----
user_notes = st.text_area("Notas u observaciones:")

# ---- Exportar t√©rminos a CSV ----
if st.button("Guardar y exportar"):
    if not st.session_state.selected_terms:
        st.error("‚ö† No hay t√©rminos seleccionados.")
    else:
        data = {
            "T√©rmino": st.session_state.selected_terms,
            "Usuario": [user_name] * len(st.session_state.selected_terms),
            "Observaciones": [user_notes] * len(st.session_state.selected_terms),
        }
        df = pd.DataFrame(data)
        csv = df.to_csv(index=False).encode("utf-8")

        st.download_button(
            label="üì• Descargar t√©rminos seleccionados",
            data=csv,
            file_name="terminos_seleccionados.csv",
            mime="text/csv",
        )

st.write("Cuando termines, env√≠ame el archivo a isabel.moyano@uca.es. ¬°Gracias! üòä")
